// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/tonoco/product/v1/product.proto

package tonoco_product_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string  `protobuf:"bytes,10,opt,name=id,proto3" json:"id,omitempty"`
	Sku                   string  `protobuf:"bytes,20,opt,name=sku,proto3" json:"sku,omitempty"`
	Name                  string  `protobuf:"bytes,30,opt,name=name,proto3" json:"name,omitempty"`
	ShortDescription      string  `protobuf:"bytes,40,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	Description           string  `protobuf:"bytes,50,opt,name=description,proto3" json:"description,omitempty"`
	Order                 int32   `protobuf:"varint,60,opt,name=order,proto3" json:"order,omitempty"`
	StatusId              string  `protobuf:"bytes,70,opt,name=status_id,json=statusId,proto3" json:"status_id,omitempty"`
	Slug                  string  `protobuf:"bytes,80,opt,name=slug,proto3" json:"slug,omitempty"`
	RegularPrice          float32 `protobuf:"fixed32,90,opt,name=regular_price,json=regularPrice,proto3" json:"regular_price,omitempty"`
	SalePrice             float32 `protobuf:"fixed32,100,opt,name=sale_price,json=salePrice,proto3" json:"sale_price,omitempty"`
	FactoryPrice          float32 `protobuf:"fixed32,110,opt,name=factory_price,json=factoryPrice,proto3" json:"factory_price,omitempty"`
	IsTaxable             bool    `protobuf:"varint,120,opt,name=is_taxable,json=isTaxable,proto3" json:"is_taxable,omitempty"`
	Quantity              int32   `protobuf:"varint,130,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReturnToStockDate     int64   `protobuf:"varint,140,opt,name=return_to_stock_date,json=returnToStockDate,proto3" json:"return_to_stock_date,omitempty"`
	IsTrackStock          bool    `protobuf:"varint,150,opt,name=is_track_stock,json=isTrackStock,proto3" json:"is_track_stock,omitempty"`
	ShippingClassId       string  `protobuf:"bytes,160,opt,name=shipping_class_id,json=shippingClassId,proto3" json:"shipping_class_id,omitempty"`
	ShippingWeight        float32 `protobuf:"fixed32,170,opt,name=shipping_weight,json=shippingWeight,proto3" json:"shipping_weight,omitempty"`
	ShippingWidth         float32 `protobuf:"fixed32,180,opt,name=shipping_width,json=shippingWidth,proto3" json:"shipping_width,omitempty"`
	ShippingHeight        float32 `protobuf:"fixed32,190,opt,name=shipping_height,json=shippingHeight,proto3" json:"shipping_height,omitempty"`
	ShippingLength        float32 `protobuf:"fixed32,200,opt,name=shipping_length,json=shippingLength,proto3" json:"shipping_length,omitempty"`
	SeoTitle              string  `protobuf:"bytes,210,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title,omitempty"`
	SeoDescription        string  `protobuf:"bytes,220,opt,name=seo_description,json=seoDescription,proto3" json:"seo_description,omitempty"`
	Gtin                  string  `protobuf:"bytes,230,opt,name=gtin,proto3" json:"gtin,omitempty"`
	GoogleProductCategory string  `protobuf:"bytes,240,opt,name=google_product_category,json=googleProductCategory,proto3" json:"google_product_category,omitempty"`
	GoogleProductType     string  `protobuf:"bytes,250,opt,name=google_product_type,json=googleProductType,proto3" json:"google_product_type,omitempty"`
	CreatedAt             int64   `protobuf:"varint,260,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy             string  `protobuf:"bytes,270,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt             int64   `protobuf:"varint,280,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy             string  `protobuf:"bytes,290,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_tonoco_product_v1_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_proto_tonoco_product_v1_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_proto_tonoco_product_v1_product_proto_rawDescGZIP(), []int{0}
}

func (x *Product) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Product) GetSku() string {
	if x != nil {
		return x.Sku
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Product) GetStatusId() string {
	if x != nil {
		return x.StatusId
	}
	return ""
}

func (x *Product) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Product) GetRegularPrice() float32 {
	if x != nil {
		return x.RegularPrice
	}
	return 0
}

func (x *Product) GetSalePrice() float32 {
	if x != nil {
		return x.SalePrice
	}
	return 0
}

func (x *Product) GetFactoryPrice() float32 {
	if x != nil {
		return x.FactoryPrice
	}
	return 0
}

func (x *Product) GetIsTaxable() bool {
	if x != nil {
		return x.IsTaxable
	}
	return false
}

func (x *Product) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Product) GetReturnToStockDate() int64 {
	if x != nil {
		return x.ReturnToStockDate
	}
	return 0
}

func (x *Product) GetIsTrackStock() bool {
	if x != nil {
		return x.IsTrackStock
	}
	return false
}

func (x *Product) GetShippingClassId() string {
	if x != nil {
		return x.ShippingClassId
	}
	return ""
}

func (x *Product) GetShippingWeight() float32 {
	if x != nil {
		return x.ShippingWeight
	}
	return 0
}

func (x *Product) GetShippingWidth() float32 {
	if x != nil {
		return x.ShippingWidth
	}
	return 0
}

func (x *Product) GetShippingHeight() float32 {
	if x != nil {
		return x.ShippingHeight
	}
	return 0
}

func (x *Product) GetShippingLength() float32 {
	if x != nil {
		return x.ShippingLength
	}
	return 0
}

func (x *Product) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *Product) GetSeoDescription() string {
	if x != nil {
		return x.SeoDescription
	}
	return ""
}

func (x *Product) GetGtin() string {
	if x != nil {
		return x.Gtin
	}
	return ""
}

func (x *Product) GetGoogleProductCategory() string {
	if x != nil {
		return x.GoogleProductCategory
	}
	return ""
}

func (x *Product) GetGoogleProductType() string {
	if x != nil {
		return x.GoogleProductType
	}
	return ""
}

func (x *Product) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Product) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Product) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Product) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

var File_proto_tonoco_product_v1_product_proto protoreflect.FileDescriptor

var file_proto_tonoco_product_v1_product_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x6e, 0x6f, 0x63, 0x6f, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x74, 0x6f, 0x6e, 0x6f, 0x63, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x76, 0x31, 0x22, 0xed, 0x07, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x46,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x72, 0x65, 0x67, 0x75, 0x6c,
	0x61, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x61, 0x6c,
	0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x74, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x54, 0x61, 0x78, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x8c, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f,
	0x74, 0x72, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x96, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0xa0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0xaa, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0xb4, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0xbe, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0xc8, 0x01, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0xd2, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0xdc, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x6f,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x04, 0x67,
	0x74, 0x69, 0x6e, 0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x74, 0x69, 0x6e,
	0x12, 0x37, 0x0a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0xf0, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x13, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0xfa, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x84, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x8e, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x98, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0xa2, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x42, 0x53, 0x5a, 0x51, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6d, 0x52, 0x75, 0x73, 0x61, 0x6b,
	0x6f, 0x76, 0x2f, 0x74, 0x6f, 0x6e, 0x6f, 0x63, 0x6f, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x6e, 0x6f,
	0x63, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x6f,
	0x6e, 0x6f, 0x63, 0x6f, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_tonoco_product_v1_product_proto_rawDescOnce sync.Once
	file_proto_tonoco_product_v1_product_proto_rawDescData = file_proto_tonoco_product_v1_product_proto_rawDesc
)

func file_proto_tonoco_product_v1_product_proto_rawDescGZIP() []byte {
	file_proto_tonoco_product_v1_product_proto_rawDescOnce.Do(func() {
		file_proto_tonoco_product_v1_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_tonoco_product_v1_product_proto_rawDescData)
	})
	return file_proto_tonoco_product_v1_product_proto_rawDescData
}

var file_proto_tonoco_product_v1_product_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_tonoco_product_v1_product_proto_goTypes = []interface{}{
	(*Product)(nil), // 0: tonoco.product.v1.Product
}
var file_proto_tonoco_product_v1_product_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_tonoco_product_v1_product_proto_init() }
func file_proto_tonoco_product_v1_product_proto_init() {
	if File_proto_tonoco_product_v1_product_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_tonoco_product_v1_product_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_tonoco_product_v1_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_tonoco_product_v1_product_proto_goTypes,
		DependencyIndexes: file_proto_tonoco_product_v1_product_proto_depIdxs,
		MessageInfos:      file_proto_tonoco_product_v1_product_proto_msgTypes,
	}.Build()
	File_proto_tonoco_product_v1_product_proto = out.File
	file_proto_tonoco_product_v1_product_proto_rawDesc = nil
	file_proto_tonoco_product_v1_product_proto_goTypes = nil
	file_proto_tonoco_product_v1_product_proto_depIdxs = nil
}
